dbProxy:
  image:
    name: yuvipanda/paws-db-proxy
    tag: vd74f11d

queryKiller:
  image:
    name: yuvipanda/paws-query-killer
    tag: v98acb53
  maxQueryTime: 1800

mysql:
  host: labsdb1001.eqiad.wmnet
  username: s52771

deployHook:
  host: paws-deploy-hook.tools.wmflabs.org

jupyterhub:
  hub:
      uid: 52771
      fsGid: 52771
      image:
          name:  yuvipanda/paws-hub
          tag: v6efe347
      extraConfig: |
          import hmac
          import hashlib
          import os
          from oauthenticator.mediawiki import MWOAuthenticator
          from tornado import gen

          class Auth(MWOAuthenticator):
              enable_auth_state = True
              @gen.coroutine
              def pre_spawn_start(self, user, spawner):
                  auth_state = yield user.get_auth_state()
                  spawner.environment['ACCESS_KEY'] = auth_state['ACCESS_TOKEN_KEY']
                  spawner.environment['ACCESS_SECRET'] = auth_state['ACCESS_TOKEN_SECRET']
                  spawner.environment['CLIENT_ID'] = self.client_id
                  spawner.environment['CLIENT_SECRET'] = self.client_secret
                  spawner.environment['USER'] = auth_state['MEDIAWIKI_USER_NAME']
                  # Set rather than use .extend!
                  # Since otherwise the volumes list will grow each time
                  # the spawner stops and starts!
                  spawner.volumes = [
                      {
                          'name': 'home',
                          'hostPath': { 'path': '/data/project/paws/userhomes/{}'.format(auth_state['MEDIAWIKI_USER_ID']) }
                      },
                      {
                          'name': 'dumps',
                          'hostPath': { 'path': '/public/dumps' }
                      }
                  ]
                  spawner.volume_mounts = [
                      {
                          'name': 'home',
                          'mountPath': '/home/paws'
                      },
                      {
                          'name': 'dumps',
                          'mountPath': '/public/dumps'
                      }
                  ]

                  spawner.environment['MYSQL_HOST'] = os.environ['MYSQL_SERVICE_HOST']
                  mysql_password = hmac.new(
                      os.environ['MYSQL_HMAC_KEY'].encode('utf-8'),
                      auth_state['MEDIAWIKI_USER_NAME'].encode('utf-8'),
                      hashlib.sha256
                  ).hexdigest()
                  spawner.environment['MYSQL_USERNAME'] = auth_state['MEDIAWIKI_USER_NAME']
                  spawner.environment['MYSQL_PASSWORD'] = mysql_password

          c.JupyterHub.authenticator_class = Auth
      db:
          pvc:
              selector:
                  matchLabels:
                      type: hostpath
                      kind: hubdb
              accessModes:
                  - ReadWriteMany

  cull:
      enabled: false

  auth:
      type: mediawiki
  admin:
    users:
      - YuviPanda

  singleuser:
      uid: 52771
      fsGid: 52771
      image:
          name: yuvipanda/paws-singleuser
          tag: v4db45b9
      storage:
          type: none

  ingress:
      enabled: true
      host: paws.wmflabs.org
      https:
          enabled: true
          type: "kube-lego"
